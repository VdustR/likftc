import{aa as W,ab as q,ac as Ws,ad as js,N as Js,S as os,i as ps,s as Fs,a2 as V,l as rs,a3 as U,g as c,M as k,d as o,F as zs,e as _,t as y,k as h,c as d,a as C,h as f,m as A,b as x,J as i,G as Qs,H as Xs,I as Ys,q as D,o as b,w as j,x as K,y as S,B as T,v as Zs,E as Ks,ae as Ss,a7 as Ts}from"../chunks/vendor-634ba1c4.js";import{L as sa}from"../chunks/index-183903fa.js";import{S as aa,T as na,A as la}from"../chunks/Article-56b4d289.js";import{D as ea}from"../chunks/Demo-b16e303f.js";import"../chunks/paths-4b3c6e7e.js";const cs=new WeakMap,Hs=e=>{e.classList.add("animate__animated","animate__fadeIn","animate__slow"),cs.set(e,!0),e.addEventListener("animationend",()=>{cs.delete(e),e.classList.remove("animate__animated","animate__fadeIn","animate__slow")})},Ps=(e,s,l)=>{(cs.get(e)||!1)&&(e.classList.remove("animate__fadeOut"),cs.delete(e)),e.classList.add("animate__animated","animate__fadeOut","animate__slow");const t=()=>{l(),e.removeEventListener("animationend",t)};e.addEventListener("animationend",t)},ta=200,Ms=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];function Ns(){const[e,s]=W.exports.useState(0),l=W.exports.useMemo(()=>Ms[e],[e]);return W.exports.useEffect(()=>{let a;function t(){!a||(clearInterval(a),a=null)}return a=setInterval(()=>{s(F=>{const u=F+1;return u>=Ms.length-1&&t(),u})},ta),()=>{t()}},[]),l}function oa(){const e=Ns();return q.createElement(Ws,{flipKey:e.join(",")},q.createElement("ul",null,e.map(s=>q.createElement(js,{key:s,flipId:s,onAppear:Hs,onExit:Ps},q.createElement("li",null,s)))))}function pa(e,s){const{current:{get:l,sync:a}}=W.exports.useRef(sa(e,s));return W.exports.useEffect(()=>{a(e)},[e,a]),{get:l}}function Fa(){const e=Ns(),{get:s}=pa(e,Js);return q.createElement(Ws,{flipKey:e.join(",")},q.createElement("ul",null,e.map(l=>{const a=s(l);return q.createElement(js,{key:a,flipId:a,onAppear:Hs,onExit:Ps},q.createElement("li",null,l))})))}function ra(e){let s,l=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> { ReactNode } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">react</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> React </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">react</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { Flipped, Flipper } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">react-flip-toolkit</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { onAppear, onExit } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">export</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">default</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">With</span><span style="color: #F8F8F2">()</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">ReactNode</span><span style="color: #F8F8F2"> {</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">return</span><span style="color: #F8F8F2"> (</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #8BE9FD; font-style: italic">Flipper</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">flipKey</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{frame.</span><span style="color: #50FA7B">join</span><span style="color: #F8F8F2">(</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">,</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">)}&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        {frame.</span><span style="color: #50FA7B">map</span><span style="color: #F8F8F2">((</span><span style="color: #FFB86C; font-style: italic">item</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> (</span></span>
<span class="line"><span style="color: #F8F8F2">          &lt;</span><span style="color: #8BE9FD; font-style: italic">Flipped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{item} </span><span style="color: #50FA7B; font-style: italic">flipId</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{item} </span><span style="color: #50FA7B; font-style: italic">onAppear</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{onAppear} </span><span style="color: #50FA7B; font-style: italic">onExit</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{onExit}&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">            &lt;</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;{item}&lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">          &lt;/</span><span style="color: #8BE9FD; font-style: italic">Flipped</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        ))}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #8BE9FD; font-style: italic">Flipper</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  );</span></span>
<span class="line"><span style="color: #F8F8F2">}</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new V,a=rs(),this.h()},l(t){s=U(t),a=rs(),this.h()},h(){s.a=a},m(t,F){s.m(l,t,F),c(t,a,F)},p:k,i:k,o:k,d(t){t&&o(a),t&&s.d()}}}class ca extends os{constructor(s){super();ps(this,s,null,ra,Fs,{})}}function ia(e){let s,l=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useLikftc </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@likftc/react</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> React, { ReactNode } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">react</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { Flipped, Flipper } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">react-flip-toolkit</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { onAppear, onExit } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">export</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">default</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">With</span><span style="color: #F8F8F2">()</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">ReactNode</span><span style="color: #F8F8F2"> {</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> { get } </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useLikftc</span><span style="color: #F8F8F2">(frame, v4);</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">return</span><span style="color: #F8F8F2"> (</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #8BE9FD; font-style: italic">Flipper</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">flipKey</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{frame.</span><span style="color: #50FA7B">join</span><span style="color: #F8F8F2">(</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">,</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">)}&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        {frame.</span><span style="color: #50FA7B">map</span><span style="color: #F8F8F2">((</span><span style="color: #FFB86C; font-style: italic">item</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> {</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> mapKey </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">get</span><span style="color: #F8F8F2">(item);</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">return</span><span style="color: #F8F8F2"> (</span></span>
<span class="line"><span style="color: #F8F8F2">            &lt;</span><span style="color: #8BE9FD; font-style: italic">Flipped</span></span>
<span class="line"><span style="color: #F8F8F2">              </span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{mapKey}</span></span>
<span class="line"><span style="color: #F8F8F2">              </span><span style="color: #50FA7B; font-style: italic">flipId</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{mapKey}</span></span>
<span class="line"><span style="color: #F8F8F2">              </span><span style="color: #50FA7B; font-style: italic">onAppear</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{onAppear}</span></span>
<span class="line"><span style="color: #F8F8F2">              </span><span style="color: #50FA7B; font-style: italic">onExit</span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2">{onExit}</span></span>
<span class="line"><span style="color: #F8F8F2">            &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">              &lt;</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;{item}&lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">            &lt;/</span><span style="color: #8BE9FD; font-style: italic">Flipped</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">          );</span></span>
<span class="line"><span style="color: #F8F8F2">        })}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #8BE9FD; font-style: italic">Flipper</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  );</span></span>
<span class="line"><span style="color: #F8F8F2">}</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new V,a=rs(),this.h()},l(t){s=U(t),a=rs(),this.h()},h(){s.a=a},m(t,F){s.m(l,t,F),c(t,a,F)},p:k,i:k,o:k,d(t){t&&o(a),t&&s.d()}}}class ya extends os{constructor(s){super();ps(this,s,null,ia,Fs,{})}}const fa=e=>({}),Os=e=>({});function ua(e){let s,l,a,t,F='<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">npm install @likftc/core @likftc/react</span></span></code></pre>',u,p,m,$,B,Vs=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> { get } </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useLikftc</span><span style="color: #F8F8F2">(keys);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6272A4">// custom generator</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">generator</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> () </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">v4</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> { get } </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useLikftc</span><span style="color: #F8F8F2">(keys, generator);</span></span></code></pre>`,G,H,is,ss,J,Us=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">keys</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (</span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">)[];</span></span>
<span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">generator</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (() </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">;</span></span></code></pre>`,z,g,ys,Q,fs,us,X,ms,_s,as,Y,Gs=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">  &lt;Flipper flipKey={keys.join(&quot;,&quot;)}&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;ul&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {keys.map((key) =&gt; (</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;Flipped</span></span>
<span class="line"><span style="color: #FF5555">-         key={key}</span></span>
<span class="line"><span style="color: #50FA7B">+         key={get(key)}</span></span>
<span class="line"><span style="color: #FF5555">-         flipId={key}</span></span>
<span class="line"><span style="color: #50FA7B">+         flipId={get(key)}</span></span>
<span class="line"><span style="color: #F8F8F2">          onAppear={onAppear}</span></span>
<span class="line"><span style="color: #F8F8F2">          onExit={onExit}</span></span>
<span class="line"><span style="color: #F8F8F2">        &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">          &lt;li&gt;{key}&lt;/li&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;/Flipped&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      ))}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/ul&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/Flipper&gt;</span></span></code></pre>`,Z,P,ds,ns,w,Cs,I,$s,Es,L,hs,As,ls,es,v,ks,R,gs,ws,M;const Bs=e[1].demo,E=zs(Bs,e,e[0],Os);return{c(){s=_("h2"),l=y("Setup"),a=h(),t=new V,u=h(),p=_("h2"),m=y("Usage"),$=h(),B=new V,G=h(),H=_("p"),is=y("Types:"),ss=h(),J=new V,z=h(),g=_("p"),ys=y("and replace the "),Q=_("code"),fs=y("key"),us=y(" with "),X=_("code"),ms=y("get(key)"),_s=y(":"),as=h(),Y=new V,Z=h(),P=_("h2"),ds=y("Demo"),ns=h(),w=_("p"),Cs=y("We use "),I=_("a"),$s=y("React FLIP Toolkit"),Es=y(" and "),L=_("a"),hs=y("Animate.css"),As=y(" for demo."),ls=h(),E&&E.c(),es=h(),v=_("p"),ks=y("Check the full demo code "),R=_("a"),gs=y("here"),ws=y("."),this.h()},l(n){s=d(n,"H2",{});var r=C(s);l=f(r,"Setup"),r.forEach(o),a=A(n),t=U(n),u=A(n),p=d(n,"H2",{});var vs=C(p);m=f(vs,"Usage"),vs.forEach(o),$=A(n),B=U(n),G=A(n),H=d(n,"P",{});var qs=C(H);is=f(qs,"Types:"),qs.forEach(o),ss=A(n),J=U(n),z=A(n),g=d(n,"P",{});var N=C(g);ys=f(N,"and replace the "),Q=d(N,"CODE",{});var xs=C(Q);fs=f(xs,"key"),xs.forEach(o),us=f(N," with "),X=d(N,"CODE",{});var Ds=C(X);ms=f(Ds,"get(key)"),Ds.forEach(o),_s=f(N,":"),N.forEach(o),as=A(n),Y=U(n),Z=A(n),P=d(n,"H2",{});var bs=C(P);ds=f(bs,"Demo"),bs.forEach(o),ns=A(n),w=d(n,"P",{});var O=C(w);Cs=f(O,"We use "),I=d(O,"A",{href:!0,rel:!0});var Is=C(I);$s=f(Is,"React FLIP Toolkit"),Is.forEach(o),Es=f(O," and "),L=d(O,"A",{href:!0,rel:!0});var Ls=C(L);hs=f(Ls,"Animate.css"),Ls.forEach(o),As=f(O," for demo."),O.forEach(o),ls=A(n),E&&E.l(n),es=A(n),v=d(n,"P",{});var ts=C(v);ks=f(ts,"Check the full demo code "),R=d(ts,"A",{href:!0,rel:!0});var Rs=C(R);gs=f(Rs,"here"),Rs.forEach(o),ws=f(ts,"."),ts.forEach(o),this.h()},h(){t.a=u,B.a=G,J.a=z,Y.a=Z,x(I,"href","https://github.com/aholachek/react-flip-toolkit"),x(I,"rel","nofollow"),x(L,"href","https://github.com/animate-css/animate.css"),x(L,"rel","nofollow"),x(R,"href","https://github.com/VdustR/likftc/tree/main/packages/doc/src/lib/demo/react"),x(R,"rel","nofollow")},m(n,r){c(n,s,r),i(s,l),c(n,a,r),t.m(F,n,r),c(n,u,r),c(n,p,r),i(p,m),c(n,$,r),B.m(Vs,n,r),c(n,G,r),c(n,H,r),i(H,is),c(n,ss,r),J.m(Us,n,r),c(n,z,r),c(n,g,r),i(g,ys),i(g,Q),i(Q,fs),i(g,us),i(g,X),i(X,ms),i(g,_s),c(n,as,r),Y.m(Gs,n,r),c(n,Z,r),c(n,P,r),i(P,ds),c(n,ns,r),c(n,w,r),i(w,Cs),i(w,I),i(I,$s),i(w,Es),i(w,L),i(L,hs),i(w,As),c(n,ls,r),E&&E.m(n,r),c(n,es,r),c(n,v,r),i(v,ks),i(v,R),i(R,gs),i(v,ws),M=!0},p(n,[r]){E&&E.p&&(!M||r&1)&&Qs(E,Bs,n,n[0],M?Ys(Bs,n[0],r,fa):Xs(n[0]),Os)},i(n){M||(D(E,n),M=!0)},o(n){b(E,n),M=!1},d(n){n&&o(s),n&&o(a),n&&t.d(),n&&o(u),n&&o(p),n&&o($),n&&B.d(),n&&o(G),n&&o(H),n&&o(ss),n&&J.d(),n&&o(z),n&&o(g),n&&o(as),n&&Y.d(),n&&o(Z),n&&o(P),n&&o(ns),n&&o(w),n&&o(ls),E&&E.d(n),n&&o(es),n&&o(v)}}}function ma(e,s,l){let{$$slots:a={},$$scope:t}=s;return e.$$set=F=>{"$$scope"in F&&l(0,t=F.$$scope)},[t,a]}class _a extends os{constructor(s){super();ps(this,s,ma,ua,Fs,{})}}function da(e){let s="React",l;return{c(){l=y(s)},l(a){l=f(a,s)},m(a,t){c(a,l,t)},p:k,d(a){a&&o(l)}}}function Ca(e){let s;return{c(){s=_("div"),this.h()},l(l){s=d(l,"DIV",{slot:!0}),C(s).forEach(o),this.h()},h(){x(s,"slot","with")},m(l,a){c(l,s,a),e[5](s)},p:k,d(l){l&&o(s),e[5](null)}}}function $a(e){let s;return{c(){s=_("div"),this.h()},l(l){s=d(l,"DIV",{slot:!0}),C(s).forEach(o),this.h()},h(){x(s,"slot","without")},m(l,a){c(l,s,a),e[4](s)},p:k,d(l){l&&o(s),e[4](null)}}}function Ea(e){let s,l;return s=new ya({props:{slot:"code-with"}}),{c(){j(s.$$.fragment)},l(a){K(s.$$.fragment,a)},m(a,t){S(s,a,t),l=!0},p:k,i(a){l||(D(s.$$.fragment,a),l=!0)},o(a){b(s.$$.fragment,a),l=!1},d(a){T(s,a)}}}function ha(e){let s,l;return s=new ca({props:{slot:"code-without"}}),{c(){j(s.$$.fragment)},l(a){K(s.$$.fragment,a)},m(a,t){S(s,a,t),l=!0},p:k,i(a){l||(D(s.$$.fragment,a),l=!0)},o(a){b(s.$$.fragment,a),l=!1},d(a){T(s,a)}}}function Aa(e){let s,l;return s=new ea({props:{slot:"demo",$$slots:{"code-without":[ha],"code-with":[Ea],without:[$a],with:[Ca]},$$scope:{ctx:e}}}),s.$on("refreshWith",e[2]),s.$on("refreshWithout",e[3]),{c(){j(s.$$.fragment)},l(a){K(s.$$.fragment,a)},m(a,t){S(s,a,t),l=!0},p(a,t){const F={};t&67&&(F.$$scope={dirty:t,ctx:a}),s.$set(F)},i(a){l||(D(s.$$.fragment,a),l=!0)},o(a){b(s.$$.fragment,a),l=!1},d(a){T(s,a)}}}function ka(e){let s,l;return s=new _a({props:{$$slots:{demo:[Aa]},$$scope:{ctx:e}}}),{c(){j(s.$$.fragment)},l(a){K(s.$$.fragment,a)},m(a,t){S(s,a,t),l=!0},p(a,t){const F={};t&67&&(F.$$scope={dirty:t,ctx:a}),s.$set(F)},i(a){l||(D(s.$$.fragment,a),l=!0)},o(a){b(s.$$.fragment,a),l=!1},d(a){T(s,a)}}}function ga(e){let s,l,a,t,F,u;return s=new aa({props:{title:"React",description:"List item keys for React transition components."}}),a=new na({props:{$$slots:{default:[da]},$$scope:{ctx:e}}}),F=new la({props:{$$slots:{default:[ka]},$$scope:{ctx:e}}}),{c(){j(s.$$.fragment),l=h(),j(a.$$.fragment),t=h(),j(F.$$.fragment)},l(p){K(s.$$.fragment,p),l=A(p),K(a.$$.fragment,p),t=A(p),K(F.$$.fragment,p)},m(p,m){S(s,p,m),c(p,l,m),S(a,p,m),c(p,t,m),S(F,p,m),u=!0},p(p,[m]){const $={};m&64&&($.$$scope={dirty:m,ctx:p}),a.$set($);const B={};m&67&&(B.$$scope={dirty:m,ctx:p}),F.$set(B)},i(p){u||(D(s.$$.fragment,p),D(a.$$.fragment,p),D(F.$$.fragment,p),u=!0)},o(p){b(s.$$.fragment,p),b(a.$$.fragment,p),b(F.$$.fragment,p),u=!1},d(p){T(s,p),p&&o(l),T(a,p),p&&o(t),T(F,p)}}}function wa(e,s,l){let a,t;async function F(){await Ks(),Ss.exports.render(W.exports.createElement(Fa),a)}async function u(){await Ks(),Ss.exports.render(W.exports.createElement(oa),t)}Zs(()=>{F(),u()});function p($){Ts[$?"unshift":"push"](()=>{t=$,l(1,t)})}function m($){Ts[$?"unshift":"push"](()=>{a=$,l(0,a)})}return[a,t,F,u,p,m]}class ba extends os{constructor(s){super();ps(this,s,wa,ga,Fs,{})}}export{ba as default};
