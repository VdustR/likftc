import{S as I,i as H,s as T,F as $s,G as hs,H as ds,I as gs,q as $,o as h,v as Ds,e as d,w as b,c as g,a as C,x as q,d as i,g as f,y as L,B as S,t as k,k as v,h as E,m as w,J as m,j as As,P as bs,Q as qs,R as Ls,U as Ss,V as ts,l as M,n as Ws,Z as Is,p as Hs,M as D,T as Ts,W as as,_ as Ms,a2 as Ks,a0 as N,a1 as O,b as es,E as Us,a3 as js}from"../chunks/vendor-01245463.js";import{L as Xs,S as Ys,T as xs,A as sl}from"../chunks/index-c5dc1599.js";import{D as ll}from"../chunks/Demo-4d48abb6.js";const nl=p=>({frame:p&1}),Ps=p=>({frame:p[0]});function tl(p){let s;const t=p[3].default,l=$s(t,p,p[2],Ps);return{c(){l&&l.c()},l(n){l&&l.l(n)},m(n,e){l&&l.m(n,e),s=!0},p(n,[e]){l&&l.p&&(!s||e&5)&&hs(l,t,n,n[2],s?gs(t,n[2],e,nl):ds(n[2]),Ps)},i(n){s||($(l,n),s=!0)},o(n){h(l,n),s=!1},d(n){l&&l.d(n)}}}const al=200;function el(p,s,t){let l,{$$slots:n={},$$scope:e}=s;const c=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];let a=0;return Ds(()=>{let o=setInterval(()=>{if(t(1,a++,a),a>=c.length-1){F();return}},al);function F(){!o||(clearInterval(o),o=null)}return F}),p.$$set=o=>{"$$scope"in o&&t(2,e=o.$$scope)},p.$$.update=()=>{p.$$.dirty&2&&t(0,l=c[a])},[l,a,e,n]}class Rs extends I{constructor(s){super();H(this,s,el,tl,T,{})}}function Vs(p,s,t){const l=p.slice();return l[1]=s[t],l}function Ns(p,s){let t,l=s[1]+"",n,e,c,a,o=D,F;return{key:p,first:null,c(){t=d("li"),n=k(l),e=v(),this.h()},l(y){t=g(y,"LI",{});var _=C(t);n=E(_,l),e=w(_),_.forEach(i),this.h()},h(){this.first=t},m(y,_){f(y,t,_),m(t,n),m(t,e),F=!0},p(y,_){s=y,(!F||_&1)&&l!==(l=s[1]+"")&&As(n,l)},r(){a=t.getBoundingClientRect()},f(){bs(t),o(),qs(t,a)},a(){o(),o=Ls(t,a,Ts,{duration:1e3})},i(y){F||(y&&Ss(()=>{c||(c=ts(t,as,{duration:1e3},!0)),c.run(1)}),F=!0)},o(y){y&&(c||(c=ts(t,as,{duration:1e3},!1)),c.run(0)),F=!1},d(y){y&&i(t),y&&c&&c.end()}}}function ol(p){let s=[],t=new Map,l,n,e=p[0];const c=a=>a[1];for(let a=0;a<e.length;a+=1){let o=Vs(p,e,a),F=c(o);t.set(F,s[a]=Ns(F,o))}return{c(){for(let a=0;a<s.length;a+=1)s[a].c();l=M()},l(a){for(let o=0;o<s.length;o+=1)s[o].l(a);l=M()},m(a,o){for(let F=0;F<s.length;F+=1)s[F].m(a,o);f(a,l,o),n=!0},p(a,o){if(o&1){e=a[0],Ws();for(let F=0;F<s.length;F+=1)s[F].r();s=Is(s,o,c,1,a,e,t,l.parentNode,Ms,Ns,l,Vs);for(let F=0;F<s.length;F+=1)s[F].a();Hs()}},i(a){if(!n){for(let o=0;o<e.length;o+=1)$(s[o]);n=!0}},o(a){for(let o=0;o<s.length;o+=1)h(s[o]);n=!1},d(a){for(let o=0;o<s.length;o+=1)s[o].d(a);a&&i(l)}}}function pl(p){let s,t,l;return t=new Rs({props:{$$slots:{default:[ol,({frame:n})=>({0:n}),({frame:n})=>n?1:0]},$$scope:{ctx:p}}}),{c(){s=d("ul"),b(t.$$.fragment)},l(n){s=g(n,"UL",{});var e=C(s);q(t.$$.fragment,e),e.forEach(i)},m(n,e){f(n,s,e),L(t,s,null),l=!0},p(n,[e]){const c={};e&17&&(c.$$scope={dirty:e,ctx:n}),t.$set(c)},i(n){l||($(t.$$.fragment,n),l=!0)},o(n){h(t.$$.fragment,n),l=!1},d(n){n&&i(s),S(t)}}}class rl extends I{constructor(s){super();H(this,s,null,pl,T,{})}}const Fl=p=>({}),Os=p=>({get:p[0]});function cl(p){let s;const t=p[4].default,l=$s(t,p,p[3],Os);return{c(){l&&l.c()},l(n){l&&l.l(n)},m(n,e){l&&l.m(n,e),s=!0},p(n,[e]){l&&l.p&&(!s||e&8)&&hs(l,t,n,n[3],s?gs(t,n[3],e,Fl):ds(n[3]),Os)},i(n){s||($(l,n),s=!0)},o(n){h(l,n),s=!1},d(n){l&&l.d(n)}}}function il(p,s,t){let{$$slots:l={},$$scope:n}=s,{keys:e}=s,{generator:c=void 0}=s;const{get:a,sync:o}=Xs(e,c);return p.$$set=F=>{"keys"in F&&t(1,e=F.keys),"generator"in F&&t(2,c=F.generator),"$$scope"in F&&t(3,n=F.$$scope)},p.$$.update=()=>{p.$$.dirty&2&&o(e)},[a,e,c,n,l]}class yl extends I{constructor(s){super();H(this,s,il,cl,T,{keys:1,generator:2})}}function Gs(p,s,t){const l=p.slice();return l[2]=s[t],l}function Js(p,s){let t,l=s[2]+"",n,e,c,a,o=D,F;return{key:p,first:null,c(){t=d("li"),n=k(l),e=v(),this.h()},l(y){t=g(y,"LI",{});var _=C(t);n=E(_,l),e=w(_),_.forEach(i),this.h()},h(){this.first=t},m(y,_){f(y,t,_),m(t,n),m(t,e),F=!0},p(y,_){s=y,(!F||_&1)&&l!==(l=s[2]+"")&&As(n,l)},r(){a=t.getBoundingClientRect()},f(){bs(t),o(),qs(t,a)},a(){o(),o=Ls(t,a,Ts,{duration:1e3})},i(y){F||(y&&Ss(()=>{c||(c=ts(t,as,{duration:1e3},!0)),c.run(1)}),F=!0)},o(y){y&&(c||(c=ts(t,as,{duration:1e3},!1)),c.run(0)),F=!1},d(y){y&&i(t),y&&c&&c.end()}}}function fl(p){let s=[],t=new Map,l,n,e=p[0];const c=a=>a[1](a[2]);for(let a=0;a<e.length;a+=1){let o=Gs(p,e,a),F=c(o);t.set(F,s[a]=Js(F,o))}return{c(){for(let a=0;a<s.length;a+=1)s[a].c();l=M()},l(a){for(let o=0;o<s.length;o+=1)s[o].l(a);l=M()},m(a,o){for(let F=0;F<s.length;F+=1)s[F].m(a,o);f(a,l,o),n=!0},p(a,o){if(o&3){e=a[0],Ws();for(let F=0;F<s.length;F+=1)s[F].r();s=Is(s,o,c,1,a,e,t,l.parentNode,Ms,Js,l,Gs);for(let F=0;F<s.length;F+=1)s[F].a();Hs()}},i(a){if(!n){for(let o=0;o<e.length;o+=1)$(s[o]);n=!0}},o(a){for(let o=0;o<s.length;o+=1)h(s[o]);n=!1},d(a){for(let o=0;o<s.length;o+=1)s[o].d(a);a&&i(l)}}}function ul(p){let s,t;return s=new yl({props:{keys:p[0],generator:Ks,$$slots:{default:[fl,({get:l})=>({1:l}),({get:l})=>l?2:0]},$$scope:{ctx:p}}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,n){L(s,l,n),t=!0},p(l,n){const e={};n&1&&(e.keys=l[0]),n&33&&(e.$$scope={dirty:n,ctx:l}),s.$set(e)},i(l){t||($(s.$$.fragment,l),t=!0)},o(l){h(s.$$.fragment,l),t=!1},d(l){S(s,l)}}}function ml(p){let s,t,l;return t=new Rs({props:{$$slots:{default:[ul,({frame:n})=>({0:n}),({frame:n})=>n?1:0]},$$scope:{ctx:p}}}),{c(){s=d("ul"),b(t.$$.fragment)},l(n){s=g(n,"UL",{});var e=C(s);q(t.$$.fragment,e),e.forEach(i)},m(n,e){f(n,s,e),L(t,s,null),l=!0},p(n,[e]){const c={};e&33&&(c.$$scope={dirty:e,ctx:n}),t.$set(c)},i(n){l||($(t.$$.fragment,n),l=!0)},o(n){h(t.$$.fragment,n),l=!1},d(n){n&&i(s),S(t)}}}class _l extends I{constructor(s){super();H(this,s,null,ml,T,{})}}function $l(p){let s,t=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #FF79C6">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { flip } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/animate</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { fade } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Frame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./Frame.svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    {</span><span style="color: #FF79C6">#each</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">as</span><span style="color: #F8F8F2"> item (item)}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;</span><span style="color: #FF79C6">li</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">animate:</span><span style="color: #F8F8F2">flip</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">transition:</span><span style="color: #8BE9FD; font-style: italic">fade</span><span style="color: #F8F8F2">|</span><span style="color: #8BE9FD">local</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">      &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">{</span><span style="color: #F8F8F2">item</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    {</span><span style="color: #FF79C6">/each</span><span style="color: #F8F8F2">}</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,l;return{c(){s=new N,l=M(),this.h()},l(n){s=O(n),l=M(),this.h()},h(){s.a=l},m(n,e){s.m(t,n,e),f(n,l,e)},p:D,i:D,o:D,d(n){n&&i(l),n&&s.d()}}}class hl extends I{constructor(s){super();H(this,s,null,$l,T,{})}}function dl(p){let s,t=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #FF79C6">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Likftc </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@likftc/svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { flip } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/animate</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { fade } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Frame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./Frame.svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">generator</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">v4</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {</span><span style="color: #FF79C6">#each</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">as</span><span style="color: #F8F8F2"> item (</span><span style="color: #50FA7B">get</span><span style="color: #F8F8F2">(item))}</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;</span><span style="color: #FF79C6">li</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">animate:</span><span style="color: #F8F8F2">flip</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">transition:</span><span style="color: #8BE9FD; font-style: italic">fade</span><span style="color: #F8F8F2">|</span><span style="color: #8BE9FD">local</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">{</span><span style="color: #F8F8F2">item</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {</span><span style="color: #FF79C6">/each</span><span style="color: #F8F8F2">}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,l;return{c(){s=new N,l=M(),this.h()},l(n){s=O(n),l=M(),this.h()},h(){s.a=l},m(n,e){s.m(t,n,e),f(n,l,e)},p:D,i:D,o:D,d(n){n&&i(l),n&&s.d()}}}class gl extends I{constructor(s){super();H(this,s,null,dl,T,{})}}const Cl=p=>({}),Qs=p=>({});function kl(p){let s,t,l,n,e='<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">npm install @likftc/core @likftc/svelte</span></span></code></pre>',c,a,o,F,y,_=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6272A4">&lt;!-- custom generator --&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">generator</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">v4</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2"> /&gt;</span></span></code></pre>`,G,j,os,Y,J,Zs=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">keys</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (</span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">)[];</span></span>
<span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">generator</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (() </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">;</span></span></code></pre>`,Q,A,ps,Z,rs,Fs,z,cs,is,x,K,zs=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF5555">- {#each keys as key (key)}</span></span>
<span class="line"><span style="color: #50FA7B">+ {#each keys as key (get(key))}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;li</span></span>
<span class="line"><span style="color: #F8F8F2">      animate:flip={{ duration: 1000 }}</span></span>
<span class="line"><span style="color: #F8F8F2">      transition:fade|local={{ duration: 1000 }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {key}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/li&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  {/each}</span></span></code></pre>`,X,P,ys,ss,ls,W,fs,U,us,ms,R;const _s=p[1].demo,B=$s(_s,p,p[0],Qs);return{c(){s=d("h2"),t=k("Setup"),l=v(),n=new N,c=v(),a=d("h2"),o=k("Usage"),F=v(),y=new N,G=v(),j=d("p"),os=k("Types:"),Y=v(),J=new N,Q=v(),A=d("p"),ps=k("and replace the "),Z=d("code"),rs=k("key"),Fs=k(" with "),z=d("code"),cs=k("get(key)"),is=k(":"),x=v(),K=new N,X=v(),P=d("h2"),ys=k("Demo"),ss=v(),B&&B.c(),ls=v(),W=d("p"),fs=k("Check the full demo code "),U=d("a"),us=k("here"),ms=k("."),this.h()},l(r){s=g(r,"H2",{});var u=C(s);t=E(u,"Setup"),u.forEach(i),l=w(r),n=O(r),c=w(r),a=g(r,"H2",{});var Cs=C(a);o=E(Cs,"Usage"),Cs.forEach(i),F=w(r),y=O(r),G=w(r),j=g(r,"P",{});var ks=C(j);os=E(ks,"Types:"),ks.forEach(i),Y=w(r),J=O(r),Q=w(r),A=g(r,"P",{});var V=C(A);ps=E(V,"and replace the "),Z=g(V,"CODE",{});var Es=C(Z);rs=E(Es,"key"),Es.forEach(i),Fs=E(V," with "),z=g(V,"CODE",{});var vs=C(z);cs=E(vs,"get(key)"),vs.forEach(i),is=E(V,":"),V.forEach(i),x=w(r),K=O(r),X=w(r),P=g(r,"H2",{});var ws=C(P);ys=E(ws,"Demo"),ws.forEach(i),ss=w(r),B&&B.l(r),ls=w(r),W=g(r,"P",{});var ns=C(W);fs=E(ns,"Check the full demo code "),U=g(ns,"A",{href:!0,rel:!0});var Bs=C(U);us=E(Bs,"here"),Bs.forEach(i),ms=E(ns,"."),ns.forEach(i),this.h()},h(){n.a=c,y.a=G,J.a=Q,K.a=X,es(U,"href","https://github.com/VdustR/likftc/tree/main/packages/doc/src/lib/demo/svelte"),es(U,"rel","nofollow")},m(r,u){f(r,s,u),m(s,t),f(r,l,u),n.m(e,r,u),f(r,c,u),f(r,a,u),m(a,o),f(r,F,u),y.m(_,r,u),f(r,G,u),f(r,j,u),m(j,os),f(r,Y,u),J.m(Zs,r,u),f(r,Q,u),f(r,A,u),m(A,ps),m(A,Z),m(Z,rs),m(A,Fs),m(A,z),m(z,cs),m(A,is),f(r,x,u),K.m(zs,r,u),f(r,X,u),f(r,P,u),m(P,ys),f(r,ss,u),B&&B.m(r,u),f(r,ls,u),f(r,W,u),m(W,fs),m(W,U),m(U,us),m(W,ms),R=!0},p(r,[u]){B&&B.p&&(!R||u&1)&&hs(B,_s,r,r[0],R?gs(_s,r[0],u,Cl):ds(r[0]),Qs)},i(r){R||($(B,r),R=!0)},o(r){h(B,r),R=!1},d(r){r&&i(s),r&&i(l),r&&n.d(),r&&i(c),r&&i(a),r&&i(F),r&&y.d(),r&&i(G),r&&i(j),r&&i(Y),r&&J.d(),r&&i(Q),r&&i(A),r&&i(x),r&&K.d(),r&&i(X),r&&i(P),r&&i(ss),B&&B.d(r),r&&i(ls),r&&i(W)}}}function El(p,s,t){let{$$slots:l={},$$scope:n}=s;return p.$$set=e=>{"$$scope"in e&&t(0,n=e.$$scope)},[n,l]}class vl extends I{constructor(s){super();H(this,s,El,kl,T,{})}}function wl(p){let s="Svelte",t;return{c(){t=k(s)},l(l){t=E(l,s)},m(l,n){f(l,t,n)},p:D,d(l){l&&i(t)}}}function Bl(p){let s;return{c(){s=d("div"),this.h()},l(t){s=g(t,"DIV",{slot:!0}),C(s).forEach(i),this.h()},h(){es(s,"slot","with")},m(t,l){f(t,s,l),p[5](s)},p:D,d(t){t&&i(s),p[5](null)}}}function Dl(p){let s;return{c(){s=d("div"),this.h()},l(t){s=g(t,"DIV",{slot:!0}),C(s).forEach(i),this.h()},h(){es(s,"slot","without")},m(t,l){f(t,s,l),p[4](s)},p:D,d(t){t&&i(s),p[4](null)}}}function Al(p){let s,t;return s=new gl({props:{slot:"code-with"}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,n){L(s,l,n),t=!0},p:D,i(l){t||($(s.$$.fragment,l),t=!0)},o(l){h(s.$$.fragment,l),t=!1},d(l){S(s,l)}}}function bl(p){let s,t;return s=new hl({props:{slot:"code-without"}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,n){L(s,l,n),t=!0},p:D,i(l){t||($(s.$$.fragment,l),t=!0)},o(l){h(s.$$.fragment,l),t=!1},d(l){S(s,l)}}}function ql(p){let s,t;return s=new ll({props:{slot:"demo",$$slots:{"code-without":[bl],"code-with":[Al],without:[Dl],with:[Bl]},$$scope:{ctx:p}}}),s.$on("refreshWith",p[2]),s.$on("refreshWithout",p[3]),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,n){L(s,l,n),t=!0},p(l,n){const e={};n&67&&(e.$$scope={dirty:n,ctx:l}),s.$set(e)},i(l){t||($(s.$$.fragment,l),t=!0)},o(l){h(s.$$.fragment,l),t=!1},d(l){S(s,l)}}}function Ll(p){let s,t;return s=new vl({props:{$$slots:{demo:[ql]},$$scope:{ctx:p}}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,n){L(s,l,n),t=!0},p(l,n){const e={};n&67&&(e.$$scope={dirty:n,ctx:l}),s.$set(e)},i(l){t||($(s.$$.fragment,l),t=!0)},o(l){h(s.$$.fragment,l),t=!1},d(l){S(s,l)}}}function Sl(p){let s,t,l,n,e,c;return s=new Ys({props:{title:"Svelte",description:"List item keys for Svelte transition components."}}),l=new xs({props:{$$slots:{default:[wl]},$$scope:{ctx:p}}}),e=new sl({props:{$$slots:{default:[Ll]},$$scope:{ctx:p}}}),{c(){b(s.$$.fragment),t=v(),b(l.$$.fragment),n=v(),b(e.$$.fragment)},l(a){q(s.$$.fragment,a),t=w(a),q(l.$$.fragment,a),n=w(a),q(e.$$.fragment,a)},m(a,o){L(s,a,o),f(a,t,o),L(l,a,o),f(a,n,o),L(e,a,o),c=!0},p(a,[o]){const F={};o&64&&(F.$$scope={dirty:o,ctx:a}),l.$set(F);const y={};o&67&&(y.$$scope={dirty:o,ctx:a}),e.$set(y)},i(a){c||($(s.$$.fragment,a),$(l.$$.fragment,a),$(e.$$.fragment,a),c=!0)},o(a){h(s.$$.fragment,a),h(l.$$.fragment,a),h(e.$$.fragment,a),c=!1},d(a){S(s,a),a&&i(t),S(l,a),a&&i(n),S(e,a)}}}function Wl(p,s,t){let l,n;async function e(){await Us(),new _l({target:l})}async function c(){await Us(),new rl({target:n})}Ds(()=>{e(),c()});function a(F){js[F?"unshift":"push"](()=>{n=F,t(1,n)})}function o(F){js[F?"unshift":"push"](()=>{l=F,t(0,l)})}return[l,n,e,c,a,o]}class Ml extends I{constructor(s){super();H(this,s,Wl,Sl,T,{})}}export{Ml as default};
