import{S as H,i as T,s as M,J as Es,K as vs,L as ws,M as Bs,q as k,o as E,v as Ds,e as $,w as b,c as h,a as d,x as q,d as i,g as f,y as S,B as L,t as C,k as v,h as g,m as w,H as m,j as As,T as bs,U as qs,V as Ss,X as Ls,Y as as,l as I,n as Ws,Q as Is,a0 as js,p as Hs,I as D,W as Ts,Z as ts,P as Xs,a2 as R,a3 as N,b as es,E as Ms,a7 as Us}from"../chunks/vendor-b64c3f11.js";import{S as Ys}from"../chunks/index-cc27e43b.js";import{S as Zs,T as zs,A as Gs}from"../chunks/Article-58b818e4.js";import{D as sl}from"../chunks/Demo-d5e2ddaa.js";import"../chunks/index-183903fa.js";const ll=r=>({frame:r&1}),Ps=r=>({frame:r[0]});function nl(r){let s;const n=r[3].default,l=Es(n,r,r[2],Ps);return{c(){l&&l.c()},l(a){l&&l.l(a)},m(a,o){l&&l.m(a,o),s=!0},p(a,[o]){l&&l.p&&(!s||o&5)&&vs(l,n,a,a[2],s?Bs(n,a[2],o,ll):ws(a[2]),Ps)},i(a){s||(k(l,a),s=!0)},o(a){E(l,a),s=!1},d(a){l&&l.d(a)}}}const al=200;function tl(r,s,n){let l,{$$slots:a={},$$scope:o}=s;const c=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];let t=0;return Ds(()=>{let e=setInterval(()=>{if(n(1,t++,t),t>=c.length-1){F();return}},al);function F(){!e||(clearInterval(e),e=null)}return F}),r.$$set=e=>{"$$scope"in e&&n(2,o=e.$$scope)},r.$$.update=()=>{r.$$.dirty&2&&n(0,l=c[t])},[l,t,o,a]}class Vs extends H{constructor(s){super();T(this,s,tl,nl,M,{})}}function xs(r,s,n){const l=r.slice();return l[1]=s[n],l}function Rs(r,s){let n,l=s[1]+"",a,o,c,t,e=D,F;return{key:r,first:null,c(){n=$("li"),a=C(l),o=v(),this.h()},l(y){n=h(y,"LI",{});var _=d(n);a=g(_,l),o=w(_),_.forEach(i),this.h()},h(){this.first=n},m(y,_){f(y,n,_),m(n,a),m(n,o),F=!0},p(y,_){s=y,(!F||_&1)&&l!==(l=s[1]+"")&&As(a,l)},r(){t=n.getBoundingClientRect()},f(){bs(n),e(),qs(n,t)},a(){e(),e=Ss(n,t,Ts,{duration:1e3})},i(y){F||(y&&Ls(()=>{c||(c=as(n,ts,{duration:1e3},!0)),c.run(1)}),F=!0)},o(y){y&&(c||(c=as(n,ts,{duration:1e3},!1)),c.run(0)),F=!1},d(y){y&&i(n),y&&c&&c.end()}}}function el(r){let s=[],n=new Map,l,a,o=r[0];const c=t=>t[1];for(let t=0;t<o.length;t+=1){let e=xs(r,o,t),F=c(e);n.set(F,s[t]=Rs(F,e))}return{c(){for(let t=0;t<s.length;t+=1)s[t].c();l=I()},l(t){for(let e=0;e<s.length;e+=1)s[e].l(t);l=I()},m(t,e){for(let F=0;F<s.length;F+=1)s[F].m(t,e);f(t,l,e),a=!0},p(t,e){if(e&1){o=t[0],Ws();for(let F=0;F<s.length;F+=1)s[F].r();s=Is(s,e,c,1,t,o,n,l.parentNode,js,Rs,l,xs);for(let F=0;F<s.length;F+=1)s[F].a();Hs()}},i(t){if(!a){for(let e=0;e<o.length;e+=1)k(s[e]);a=!0}},o(t){for(let e=0;e<s.length;e+=1)E(s[e]);a=!1},d(t){for(let e=0;e<s.length;e+=1)s[e].d(t);t&&i(l)}}}function ol(r){let s,n,l;return n=new Vs({props:{$$slots:{default:[el,({frame:a})=>({0:a}),({frame:a})=>a?1:0]},$$scope:{ctx:r}}}),{c(){s=$("ul"),b(n.$$.fragment)},l(a){s=h(a,"UL",{});var o=d(s);q(n.$$.fragment,o),o.forEach(i)},m(a,o){f(a,s,o),S(n,s,null),l=!0},p(a,[o]){const c={};o&17&&(c.$$scope={dirty:o,ctx:a}),n.$set(c)},i(a){l||(k(n.$$.fragment,a),l=!0)},o(a){E(n.$$.fragment,a),l=!1},d(a){a&&i(s),L(n)}}}class pl extends H{constructor(s){super();T(this,s,null,ol,M,{})}}function Ns(r,s,n){const l=r.slice();return l[2]=s[n],l}function Os(r,s){let n,l=s[2]+"",a,o,c,t,e=D,F;return{key:r,first:null,c(){n=$("li"),a=C(l),o=v(),this.h()},l(y){n=h(y,"LI",{});var _=d(n);a=g(_,l),o=w(_),_.forEach(i),this.h()},h(){this.first=n},m(y,_){f(y,n,_),m(n,a),m(n,o),F=!0},p(y,_){s=y,(!F||_&1)&&l!==(l=s[2]+"")&&As(a,l)},r(){t=n.getBoundingClientRect()},f(){bs(n),e(),qs(n,t)},a(){e(),e=Ss(n,t,Ts,{duration:1e3})},i(y){F||(y&&Ls(()=>{c||(c=as(n,ts,{duration:1e3},!0)),c.run(1)}),F=!0)},o(y){y&&(c||(c=as(n,ts,{duration:1e3},!1)),c.run(0)),F=!1},d(y){y&&i(n),y&&c&&c.end()}}}function rl(r){let s=[],n=new Map,l,a,o=r[0];const c=t=>t[1](t[2]);for(let t=0;t<o.length;t+=1){let e=Ns(r,o,t),F=c(e);n.set(F,s[t]=Os(F,e))}return{c(){for(let t=0;t<s.length;t+=1)s[t].c();l=I()},l(t){for(let e=0;e<s.length;e+=1)s[e].l(t);l=I()},m(t,e){for(let F=0;F<s.length;F+=1)s[F].m(t,e);f(t,l,e),a=!0},p(t,e){if(e&3){o=t[0],Ws();for(let F=0;F<s.length;F+=1)s[F].r();s=Is(s,e,c,1,t,o,n,l.parentNode,js,Os,l,Ns);for(let F=0;F<s.length;F+=1)s[F].a();Hs()}},i(t){if(!a){for(let e=0;e<o.length;e+=1)k(s[e]);a=!0}},o(t){for(let e=0;e<s.length;e+=1)E(s[e]);a=!1},d(t){for(let e=0;e<s.length;e+=1)s[e].d(t);t&&i(l)}}}function Fl(r){let s,n;return s=new Ys({props:{keys:r[0],generator:Xs,$$slots:{default:[rl,({get:l})=>({1:l}),({get:l})=>l?2:0]},$$scope:{ctx:r}}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,a){S(s,l,a),n=!0},p(l,a){const o={};a&1&&(o.keys=l[0]),a&33&&(o.$$scope={dirty:a,ctx:l}),s.$set(o)},i(l){n||(k(s.$$.fragment,l),n=!0)},o(l){E(s.$$.fragment,l),n=!1},d(l){L(s,l)}}}function cl(r){let s,n,l;return n=new Vs({props:{$$slots:{default:[Fl,({frame:a})=>({0:a}),({frame:a})=>a?1:0]},$$scope:{ctx:r}}}),{c(){s=$("ul"),b(n.$$.fragment)},l(a){s=h(a,"UL",{});var o=d(s);q(n.$$.fragment,o),o.forEach(i)},m(a,o){f(a,s,o),S(n,s,null),l=!0},p(a,[o]){const c={};o&33&&(c.$$scope={dirty:o,ctx:a}),n.$set(c)},i(a){l||(k(n.$$.fragment,a),l=!0)},o(a){E(n.$$.fragment,a),l=!1},d(a){a&&i(s),L(n)}}}class il extends H{constructor(s){super();T(this,s,null,cl,M,{})}}function yl(r){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #FF79C6">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { flip } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/animate</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { fade } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Frame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./Frame.svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    {</span><span style="color: #FF79C6">#each</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">as</span><span style="color: #F8F8F2"> item (item)}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;</span><span style="color: #FF79C6">li</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">animate:</span><span style="color: #F8F8F2">flip</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">transition:</span><span style="color: #8BE9FD; font-style: italic">fade</span><span style="color: #F8F8F2">|</span><span style="color: #8BE9FD">local</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">      &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">        </span><span style="color: #FF79C6">{</span><span style="color: #F8F8F2">item</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">      &lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    {</span><span style="color: #FF79C6">/each</span><span style="color: #F8F8F2">}</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,l;return{c(){s=new R,l=I(),this.h()},l(a){s=N(a),l=I(),this.h()},h(){s.a=l},m(a,o){s.m(n,a,o),f(a,l,o)},p:D,i:D,o:D,d(a){a&&i(l),a&&s.d()}}}class fl extends H{constructor(s){super();T(this,s,null,yl,M,{})}}function ul(r){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #FF79C6">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Likftc </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@likftc/svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { flip } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/animate</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { fade } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">svelte/transition</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Frame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./Frame.svelte</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">generator</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">v4</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {</span><span style="color: #FF79C6">#each</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">as</span><span style="color: #F8F8F2"> item (</span><span style="color: #50FA7B">get</span><span style="color: #F8F8F2">(item))}</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;</span><span style="color: #FF79C6">li</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">animate:</span><span style="color: #F8F8F2">flip</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">transition:</span><span style="color: #8BE9FD; font-style: italic">fade</span><span style="color: #F8F8F2">|</span><span style="color: #8BE9FD">local</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">{ duration</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">1000</span><span style="color: #F8F8F2"> }</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">          </span><span style="color: #FF79C6">{</span><span style="color: #F8F8F2">item</span><span style="color: #FF79C6">}</span></span>
<span class="line"><span style="color: #F8F8F2">        &lt;/</span><span style="color: #FF79C6">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {</span><span style="color: #FF79C6">/each</span><span style="color: #F8F8F2">}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #8BE9FD; font-style: italic">Frame</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">ul</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,l;return{c(){s=new R,l=I(),this.h()},l(a){s=N(a),l=I(),this.h()},h(){s.a=l},m(a,o){s.m(n,a,o),f(a,l,o)},p:D,i:D,o:D,d(a){a&&i(l),a&&s.d()}}}class ml extends H{constructor(s){super();T(this,s,null,ul,M,{})}}const _l=r=>({}),Js=r=>({});function $l(r){let s,n,l,a,o='<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">npm install @likftc/core @likftc/svelte</span></span></code></pre>',c,t,e,F,y,_=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6272A4">&lt;!-- custom generator --&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { v4 } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">uuid</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">keys</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">frame</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">generator</span><span style="color: #FF79C6">={</span><span style="color: #F8F8F2">v4</span><span style="color: #FF79C6">}</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">let:</span><span style="color: #FFB86C; font-style: italic">get</span><span style="color: #F8F8F2"> /&gt;</span></span></code></pre>`,O,U,os,z,J,Ks=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">keys</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (</span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">)[];</span></span>
<span class="line"><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">generator</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> (() </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">;</span></span></code></pre>`,K,A,ps,Q,rs,Fs,X,cs,is,G,Y,Qs=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #FF5555">- {#each keys as key (key)}</span></span>
<span class="line"><span style="color: #50FA7B">+ {#each keys as key (get(key))}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;li</span></span>
<span class="line"><span style="color: #F8F8F2">      animate:flip={{ duration: 1000 }}</span></span>
<span class="line"><span style="color: #F8F8F2">      transition:fade|local={{ duration: 1000 }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {key}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/li&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  {/each}</span></span></code></pre>`,Z,P,ys,ss,ls,W,fs,j,us,ms,V;const _s=r[1].demo,B=Es(_s,r,r[0],Js);return{c(){s=$("h2"),n=C("Setup"),l=v(),a=new R,c=v(),t=$("h2"),e=C("Usage"),F=v(),y=new R,O=v(),U=$("p"),os=C("Types:"),z=v(),J=new R,K=v(),A=$("p"),ps=C("and replace the "),Q=$("code"),rs=C("key"),Fs=C(" with "),X=$("code"),cs=C("get(key)"),is=C(":"),G=v(),Y=new R,Z=v(),P=$("h2"),ys=C("Demo"),ss=v(),B&&B.c(),ls=v(),W=$("p"),fs=C("Check the full demo code "),j=$("a"),us=C("here"),ms=C("."),this.h()},l(p){s=h(p,"H2",{});var u=d(s);n=g(u,"Setup"),u.forEach(i),l=w(p),a=N(p),c=w(p),t=h(p,"H2",{});var $s=d(t);e=g($s,"Usage"),$s.forEach(i),F=w(p),y=N(p),O=w(p),U=h(p,"P",{});var hs=d(U);os=g(hs,"Types:"),hs.forEach(i),z=w(p),J=N(p),K=w(p),A=h(p,"P",{});var x=d(A);ps=g(x,"and replace the "),Q=h(x,"CODE",{});var ds=d(Q);rs=g(ds,"key"),ds.forEach(i),Fs=g(x," with "),X=h(x,"CODE",{});var Cs=d(X);cs=g(Cs,"get(key)"),Cs.forEach(i),is=g(x,":"),x.forEach(i),G=w(p),Y=N(p),Z=w(p),P=h(p,"H2",{});var gs=d(P);ys=g(gs,"Demo"),gs.forEach(i),ss=w(p),B&&B.l(p),ls=w(p),W=h(p,"P",{});var ns=d(W);fs=g(ns,"Check the full demo code "),j=h(ns,"A",{href:!0,rel:!0});var ks=d(j);us=g(ks,"here"),ks.forEach(i),ms=g(ns,"."),ns.forEach(i),this.h()},h(){a.a=c,y.a=O,J.a=K,Y.a=Z,es(j,"href","https://github.com/VdustR/likftc/tree/main/packages/doc/src/lib/demo/svelte"),es(j,"rel","nofollow")},m(p,u){f(p,s,u),m(s,n),f(p,l,u),a.m(o,p,u),f(p,c,u),f(p,t,u),m(t,e),f(p,F,u),y.m(_,p,u),f(p,O,u),f(p,U,u),m(U,os),f(p,z,u),J.m(Ks,p,u),f(p,K,u),f(p,A,u),m(A,ps),m(A,Q),m(Q,rs),m(A,Fs),m(A,X),m(X,cs),m(A,is),f(p,G,u),Y.m(Qs,p,u),f(p,Z,u),f(p,P,u),m(P,ys),f(p,ss,u),B&&B.m(p,u),f(p,ls,u),f(p,W,u),m(W,fs),m(W,j),m(j,us),m(W,ms),V=!0},p(p,[u]){B&&B.p&&(!V||u&1)&&vs(B,_s,p,p[0],V?Bs(_s,p[0],u,_l):ws(p[0]),Js)},i(p){V||(k(B,p),V=!0)},o(p){E(B,p),V=!1},d(p){p&&i(s),p&&i(l),p&&a.d(),p&&i(c),p&&i(t),p&&i(F),p&&y.d(),p&&i(O),p&&i(U),p&&i(z),p&&J.d(),p&&i(K),p&&i(A),p&&i(G),p&&Y.d(),p&&i(Z),p&&i(P),p&&i(ss),B&&B.d(p),p&&i(ls),p&&i(W)}}}function hl(r,s,n){let{$$slots:l={},$$scope:a}=s;return r.$$set=o=>{"$$scope"in o&&n(0,a=o.$$scope)},[a,l]}class dl extends H{constructor(s){super();T(this,s,hl,$l,M,{})}}function Cl(r){let s="Svelte",n;return{c(){n=C(s)},l(l){n=g(l,s)},m(l,a){f(l,n,a)},p:D,d(l){l&&i(n)}}}function gl(r){let s;return{c(){s=$("div"),this.h()},l(n){s=h(n,"DIV",{slot:!0}),d(s).forEach(i),this.h()},h(){es(s,"slot","with")},m(n,l){f(n,s,l),r[5](s)},p:D,d(n){n&&i(s),r[5](null)}}}function kl(r){let s;return{c(){s=$("div"),this.h()},l(n){s=h(n,"DIV",{slot:!0}),d(s).forEach(i),this.h()},h(){es(s,"slot","without")},m(n,l){f(n,s,l),r[4](s)},p:D,d(n){n&&i(s),r[4](null)}}}function El(r){let s,n;return s=new ml({props:{slot:"code-with"}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,a){S(s,l,a),n=!0},p:D,i(l){n||(k(s.$$.fragment,l),n=!0)},o(l){E(s.$$.fragment,l),n=!1},d(l){L(s,l)}}}function vl(r){let s,n;return s=new fl({props:{slot:"code-without"}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,a){S(s,l,a),n=!0},p:D,i(l){n||(k(s.$$.fragment,l),n=!0)},o(l){E(s.$$.fragment,l),n=!1},d(l){L(s,l)}}}function wl(r){let s,n;return s=new sl({props:{slot:"demo",$$slots:{"code-without":[vl],"code-with":[El],without:[kl],with:[gl]},$$scope:{ctx:r}}}),s.$on("refreshWith",r[2]),s.$on("refreshWithout",r[3]),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,a){S(s,l,a),n=!0},p(l,a){const o={};a&67&&(o.$$scope={dirty:a,ctx:l}),s.$set(o)},i(l){n||(k(s.$$.fragment,l),n=!0)},o(l){E(s.$$.fragment,l),n=!1},d(l){L(s,l)}}}function Bl(r){let s,n;return s=new dl({props:{$$slots:{demo:[wl]},$$scope:{ctx:r}}}),{c(){b(s.$$.fragment)},l(l){q(s.$$.fragment,l)},m(l,a){S(s,l,a),n=!0},p(l,a){const o={};a&67&&(o.$$scope={dirty:a,ctx:l}),s.$set(o)},i(l){n||(k(s.$$.fragment,l),n=!0)},o(l){E(s.$$.fragment,l),n=!1},d(l){L(s,l)}}}function Dl(r){let s,n,l,a,o,c;return s=new Zs({props:{title:"Svelte",description:"List item keys for Svelte transition components."}}),l=new zs({props:{$$slots:{default:[Cl]},$$scope:{ctx:r}}}),o=new Gs({props:{$$slots:{default:[Bl]},$$scope:{ctx:r}}}),{c(){b(s.$$.fragment),n=v(),b(l.$$.fragment),a=v(),b(o.$$.fragment)},l(t){q(s.$$.fragment,t),n=w(t),q(l.$$.fragment,t),a=w(t),q(o.$$.fragment,t)},m(t,e){S(s,t,e),f(t,n,e),S(l,t,e),f(t,a,e),S(o,t,e),c=!0},p(t,[e]){const F={};e&64&&(F.$$scope={dirty:e,ctx:t}),l.$set(F);const y={};e&67&&(y.$$scope={dirty:e,ctx:t}),o.$set(y)},i(t){c||(k(s.$$.fragment,t),k(l.$$.fragment,t),k(o.$$.fragment,t),c=!0)},o(t){E(s.$$.fragment,t),E(l.$$.fragment,t),E(o.$$.fragment,t),c=!1},d(t){L(s,t),t&&i(n),L(l,t),t&&i(a),L(o,t)}}}function Al(r,s,n){let l,a;async function o(){await Ms(),new il({target:l})}async function c(){await Ms(),new pl({target:a})}Ds(()=>{o(),c()});function t(F){Us[F?"unshift":"push"](()=>{a=F,n(1,a)})}function e(F){Us[F?"unshift":"push"](()=>{l=F,n(0,l)})}return[l,a,o,c,t,e]}class Il extends H{constructor(s){super();T(this,s,Al,Dl,M,{})}}export{Il as default};
