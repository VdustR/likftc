import{ad as J,ae as K,af as N,ag as P,ah as v,ai as c,aj as w,ak as k,al as f,am as x,an as C,ao as b,ap as W,aq as D,ar as Q,S as E,i as q,s as B,a5 as I,l as m,a6 as L,g as r,M as e,d as F,w as _,k as R,x as h,m as X,y as d,q as g,o as A,B as $,v as Y,t as Z,h as ss,e as j,c as M,a as T,b as V,E as S,as as H,a8 as G}from"../chunks/vendor-25370d7c.js";import{L as as,T as ns}from"../chunks/index-65f0a92a.js";import{D as ls}from"../chunks/Demo-607fbd3f.js";const ts=200,O=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];function U(){const o=J(0),s=K(()=>O[o.value]);let n;function a(){!n||(clearInterval(n),n=null)}return N(()=>{n=setInterval(()=>{if(o.value++,o.value>=O.length-1){a();return}},ts)}),P(a),s}var z=(o,s)=>{const n=o.__vccOpts||o;for(const[a,l]of s)n[a]=l;return n};const os=v({setup(o){const s=U();return(n,a)=>(c(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(c(!0),f(b,null,x(C(s),l=>(c(),f("li",{key:l,class:"list-complete-item"},D(l),1))),128))]),_:1}))}});var ps=z(os,[["__scopeId","data-v-2e3552a6"]]);const es=v({setup(o){let s=U();const{get:n,sync:a}=as(s.value);return Q(s,()=>{a(s.value)}),(l,t)=>(c(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(c(!0),f(b,null,x(C(s),p=>(c(),f("li",{key:C(n)(p),class:"list-complete-item"},D(p),1))),128))]),_:1}))}});var Fs=z(es,[["__scopeId","data-v-19da90fd"]]);function cs(o){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(l){s=L(l),a=m(),this.h()},h(){s.a=a},m(l,t){s.m(n,l,t),r(l,a,t)},p:e,i:e,o:e,d(l){l&&F(a),l&&s.d()}}}class rs extends E{constructor(s){super();q(this,s,null,cs,B,{})}}function ys(o){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> Likftc </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@likftc/core</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> { computed, watch } </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">vue</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">let</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> { get, sync } </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">Likftc</span><span style="color: #F8F8F2">(frame.value);</span></span>
<span class="line"><span style="color: #50FA7B">watch</span><span style="color: #F8F8F2">(frame, () </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> {</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #50FA7B">sync</span><span style="color: #F8F8F2">(frame.value);</span></span>
<span class="line"><span style="color: #F8F8F2">});</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span></span>
<span class="line"><span style="color: #F8F8F2">      </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">      :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">get(item)</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">      </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">    &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(l){s=L(l),a=m(),this.h()},h(){s.a=a},m(l,t){s.m(n,l,t),r(l,a,t)},p:e,i:e,o:e,d(l){l&&F(a),l&&s.d()}}}class is extends E{constructor(s){super();q(this,s,null,ys,B,{})}}function us(o){let s="Vue Demo",n;return{c(){n=Z(s)},l(a){n=ss(a,s)},m(a,l){r(a,n,l)},p:e,d(a){a&&F(n)}}}function fs(o){let s;return{c(){s=j("div"),this.h()},l(n){s=M(n,"DIV",{slot:!0}),T(s).forEach(F),this.h()},h(){V(s,"slot","with")},m(n,a){r(n,s,a),o[5](s)},p:e,d(n){n&&F(s),o[5](null)}}}function ms(o){let s;return{c(){s=j("div"),this.h()},l(n){s=M(n,"DIV",{slot:!0}),T(s).forEach(F),this.h()},h(){V(s,"slot","without")},m(n,a){r(n,s,a),o[4](s)},p:e,d(n){n&&F(s),o[4](null)}}}function _s(o){let s,n;return s=new is({props:{slot:"code-with"}}),{c(){_(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,l){d(s,a,l),n=!0},p:e,i(a){n||(g(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){$(s,a)}}}function hs(o){let s,n;return s=new rs({props:{slot:"code-without"}}),{c(){_(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,l){d(s,a,l),n=!0},p:e,i(a){n||(g(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){$(s,a)}}}function ds(o){let s,n,a,l;return s=new ns({props:{$$slots:{default:[us]},$$scope:{ctx:o}}}),a=new ls({props:{$$slots:{"code-without":[hs],"code-with":[_s],without:[ms],with:[fs]},$$scope:{ctx:o}}}),a.$on("refreshWith",o[2]),a.$on("refreshWithout",o[3]),{c(){_(s.$$.fragment),n=R(),_(a.$$.fragment)},l(t){h(s.$$.fragment,t),n=X(t),h(a.$$.fragment,t)},m(t,p){d(s,t,p),r(t,n,p),d(a,t,p),l=!0},p(t,[p]){const i={};p&64&&(i.$$scope={dirty:p,ctx:t}),s.$set(i);const u={};p&67&&(u.$$scope={dirty:p,ctx:t}),a.$set(u)},i(t){l||(g(s.$$.fragment,t),g(a.$$.fragment,t),l=!0)},o(t){A(s.$$.fragment,t),A(a.$$.fragment,t),l=!1},d(t){$(s,t),t&&F(n),$(a,t)}}}const Es=!0;function gs(o,s,n){let a,l;async function t(){await S(),H(Fs).mount(a)}async function p(){await S(),H(ps).mount(l)}Y(()=>{t(),p()});function i(y){G[y?"unshift":"push"](()=>{l=y,n(1,l)})}function u(y){G[y?"unshift":"push"](()=>{a=y,n(0,a)})}return[a,l,t,p,i,u]}class qs extends E{constructor(s){super();q(this,s,gs,ds,B,{})}}export{qs as default,Es as prerender};
