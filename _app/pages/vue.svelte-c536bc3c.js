import{ac as J,ad as K,ae as N,af as P,ag as C,ah as F,ai as w,aj as k,ak as f,al as x,am as $,an as b,ao as W,ap as D,aq as Q,S as E,i as q,s as v,_ as I,l as m,$ as L,g as r,O as p,d as c,w as _,k as R,x as A,m as X,y as h,q as g,o as B,B as d,v as Y,t as Z,h as ss,e as j,c as T,a as V,b as M,E as S,ar as H,a0 as O}from"../chunks/vendor-41529c01.js";import{L as as}from"../chunks/index-80948b27.js";import{T as ls,D as ns}from"../chunks/Demo-c3e45933.js";const ts=200,G=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];function U(){const o=J(0),s=K(()=>G[o.value]);let l;function a(){!l||(clearInterval(l),l=null)}return N(()=>{l=setInterval(()=>{if(o.value++,o.value>=G.length-1){a();return}},ts)}),P(a),s}var z=(o,s)=>{const l=o.__vccOpts||o;for(const[a,n]of s)l[a]=n;return l};const os=C({setup(o){const s=U();return(l,a)=>(F(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(F(!0),f(b,null,x($(s),n=>(F(),f("li",{key:n,class:"list-complete-item"},D(n),1))),128))]),_:1}))}});var es=z(os,[["__scopeId","data-v-2e3552a6"]]);const ps=C({setup(o){let s=U();const{get:l,sync:a}=as(s.value);return Q(s,()=>{a(s.value)}),(n,t)=>(F(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(F(!0),f(b,null,x($(s),e=>(F(),f("li",{key:$(l)(e),class:"list-complete-item"},D(e),1))),128))]),_:1}))}});var cs=z(ps,[["__scopeId","data-v-ddc31850"]]);function Fs(o){let s,l=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">import</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">useFrame</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">const</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">frame</span><span style="color: #F8F8F2"> = </span><span style="color: #50FA7B; font-style: italic">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(n){s=L(n),a=m(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),r(n,a,t)},p,i:p,o:p,d(n){n&&c(a),n&&s.d()}}}class rs extends E{constructor(s){super();q(this,s,null,Fs,v,{})}}function ys(o){let s,l=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">import</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">Likftc</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@vdustr/likftc</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">import</span><span style="color: #F8F8F2"> { </span><span style="color: #50FA7B; font-style: italic">computed</span><span style="color: #F8F8F2">, </span><span style="color: #50FA7B; font-style: italic">watch</span><span style="color: #F8F8F2"> } </span><span style="color: #50FA7B; font-style: italic">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">vue</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">import</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">useFrame</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">let</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">frame</span><span style="color: #F8F8F2"> = </span><span style="color: #50FA7B; font-style: italic">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">const</span><span style="color: #F8F8F2"> { </span><span style="color: #50FA7B; font-style: italic">get</span><span style="color: #F8F8F2">, </span><span style="color: #50FA7B; font-style: italic">sync</span><span style="color: #F8F8F2"> } = </span><span style="color: #50FA7B; font-style: italic">Likftc</span><span style="color: #F8F8F2">(</span><span style="color: #50FA7B; font-style: italic">frame</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B; font-style: italic">value</span><span style="color: #F8F8F2">);</span></span>
<span class="line"><span style="color: #50FA7B; font-style: italic">watch</span><span style="color: #F8F8F2">(</span><span style="color: #50FA7B; font-style: italic">frame</span><span style="color: #F8F8F2">, () =&gt; {</span></span>
<span class="line"><span style="color: #F8F8F2">  </span><span style="color: #50FA7B; font-style: italic">sync</span><span style="color: #F8F8F2">(</span><span style="color: #50FA7B; font-style: italic">frame</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B; font-style: italic">value</span><span style="color: #F8F8F2">);</span></span>
<span class="line"><span style="color: #F8F8F2">});</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span></span>
<span class="line"><span style="color: #F8F8F2">      </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">      :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">get(item)</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">      </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span></span>
<span class="line"><span style="color: #F8F8F2">    &gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(n){s=L(n),a=m(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),r(n,a,t)},p,i:p,o:p,d(n){n&&c(a),n&&s.d()}}}class is extends E{constructor(s){super();q(this,s,null,ys,v,{})}}function us(o){let s="Vue Demo",l;return{c(){l=Z(s)},l(a){l=ss(a,s)},m(a,n){r(a,l,n)},p,d(a){a&&c(l)}}}function fs(o){let s;return{c(){s=j("div"),this.h()},l(l){s=T(l,"DIV",{slot:!0}),V(s).forEach(c),this.h()},h(){M(s,"slot","with")},m(l,a){r(l,s,a),o[5](s)},p,d(l){l&&c(s),o[5](null)}}}function ms(o){let s;return{c(){s=j("div"),this.h()},l(l){s=T(l,"DIV",{slot:!0}),V(s).forEach(c),this.h()},h(){M(s,"slot","without")},m(l,a){r(l,s,a),o[4](s)},p,d(l){l&&c(s),o[4](null)}}}function _s(o){let s,l;return s=new is({props:{slot:"code-with"}}),{c(){_(s.$$.fragment)},l(a){A(s.$$.fragment,a)},m(a,n){h(s,a,n),l=!0},p,i(a){l||(g(s.$$.fragment,a),l=!0)},o(a){B(s.$$.fragment,a),l=!1},d(a){d(s,a)}}}function As(o){let s,l;return s=new rs({props:{slot:"code-without"}}),{c(){_(s.$$.fragment)},l(a){A(s.$$.fragment,a)},m(a,n){h(s,a,n),l=!0},p,i(a){l||(g(s.$$.fragment,a),l=!0)},o(a){B(s.$$.fragment,a),l=!1},d(a){d(s,a)}}}function hs(o){let s,l,a,n;return s=new ls({props:{$$slots:{default:[us]},$$scope:{ctx:o}}}),a=new ns({props:{$$slots:{"code-without":[As],"code-with":[_s],without:[ms],with:[fs]},$$scope:{ctx:o}}}),a.$on("refreshWith",o[2]),a.$on("refreshWithout",o[3]),{c(){_(s.$$.fragment),l=R(),_(a.$$.fragment)},l(t){A(s.$$.fragment,t),l=X(t),A(a.$$.fragment,t)},m(t,e){h(s,t,e),r(t,l,e),h(a,t,e),n=!0},p(t,[e]){const i={};e&64&&(i.$$scope={dirty:e,ctx:t}),s.$set(i);const u={};e&67&&(u.$$scope={dirty:e,ctx:t}),a.$set(u)},i(t){n||(g(s.$$.fragment,t),g(a.$$.fragment,t),n=!0)},o(t){B(s.$$.fragment,t),B(a.$$.fragment,t),n=!1},d(t){d(s,t),t&&c(l),d(a,t)}}}const Es=!0;function gs(o,s,l){let a,n;async function t(){await S(),H(cs).mount(a)}async function e(){await S(),H(es).mount(n)}Y(()=>{t(),e()});function i(y){O[y?"unshift":"push"](()=>{n=y,l(1,n)})}function u(y){O[y?"unshift":"push"](()=>{a=y,l(0,a)})}return[a,n,t,e,i,u]}class qs extends E{constructor(s){super();q(this,s,gs,hs,v,{})}}export{qs as default,Es as prerender};
