import{aa as J,ab as K,ac as N,ad as P,ae as v,af as c,ag as w,ah as k,ai as f,aj as x,ak as C,al as b,am as W,an as D,ao as Q,S as E,i as q,s as B,a0 as I,l as m,a1 as L,g as r,M as p,d as F,w as _,k as R,x as h,m as X,y as g,q as d,o as A,B as $,v as Y,t as Z,h as ss,e as j,c as M,a as T,b as V,E as S,ap as H,a2 as G}from"../chunks/vendor-64951b7f.js";import{L as as,T as ns}from"../chunks/index-59f88ceb.js";import{D as ls}from"../chunks/Demo-791c984f.js";const ts=200,O=[[1,2,3],[2,3,4],[3,4,1],[4,1,2],[4,3,2],[2,3,4]];function U(){const t=J(0),s=K(()=>O[t.value]);let n;function a(){!n||(clearInterval(n),n=null)}return N(()=>{n=setInterval(()=>{if(t.value++,t.value>=O.length-1){a();return}},ts)}),P(a),s}var z=(t,s)=>{const n=t.__vccOpts||t;for(const[a,l]of s)n[a]=l;return n};const os=v({setup(t){const s=U();return(n,a)=>(c(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(c(!0),f(b,null,x(C(s),l=>(c(),f("li",{key:l,class:"list-complete-item"},D(l),1))),128))]),_:1}))}});var es=z(os,[["__scopeId","data-v-2e3552a6"]]);function ps(t){const{get:s,sync:n}=as(t.value);return Q(t,()=>{n(t.value)}),{get:s}}const Fs=v({setup(t){let s=U();const{get:n}=ps(s);return(a,l)=>(c(),w(W,{name:"list-complete",tag:"ul"},{default:k(()=>[(c(!0),f(b,null,x(C(s),o=>(c(),f("li",{key:C(n)(o),class:"list-complete-item"},D(o),1))),128))]),_:1}))}});var cs=z(Fs,[["__scopeId","data-v-81d8bd92"]]);function rs(t){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(l){s=L(l),a=m(),this.h()},h(){s.a=a},m(l,o){s.m(n,l,o),r(l,a,o)},p,i:p,o:p,d(l){l&&F(a),l&&s.d()}}}class ys extends E{constructor(s){super();q(this,s,null,rs,B,{})}}function is(t){let s,n=`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ts</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">setup</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useLikftc </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">@likftc/vue</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> useFrame </span><span style="color: #FF79C6">from</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./useFrame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF79C6">let</span><span style="color: #F8F8F2"> frame </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useFrame</span><span style="color: #F8F8F2">();</span></span>
<span class="line"><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> { get } </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">useLikftc</span><span style="color: #F8F8F2">(frame);</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">script</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">name</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">tag</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">ul</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">v-for</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">item in frame</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> :</span><span style="color: #50FA7B; font-style: italic">key</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">get(item)</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">class</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">list-complete-item</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">      {{ </span><span style="color: #50FA7B; font-style: italic">item</span><span style="color: #F8F8F2"> }}</span></span>
<span class="line"><span style="color: #F8F8F2">    &lt;/</span><span style="color: #50FA7B; font-style: italic">li</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">  &lt;/</span><span style="color: #50FA7B; font-style: italic">transition-group</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"><span style="color: #F8F8F2">&lt;/</span><span style="color: #FF79C6">template</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F8F8F2">&lt;</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">scoped</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">lang</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B; font-style: italic">src</span><span style="color: #F8F8F2">=</span><span style="color: #E9F284">&quot;</span><span style="color: #F1FA8C">./style.css</span><span style="color: #E9F284">&quot;</span><span style="color: #F8F8F2">&gt;&lt;/</span><span style="color: #FF79C6">style</span><span style="color: #F8F8F2">&gt;</span></span>
<span class="line"></span></code></pre>`,a;return{c(){s=new I,a=m(),this.h()},l(l){s=L(l),a=m(),this.h()},h(){s.a=a},m(l,o){s.m(n,l,o),r(l,a,o)},p,i:p,o:p,d(l){l&&F(a),l&&s.d()}}}class us extends E{constructor(s){super();q(this,s,null,is,B,{})}}function fs(t){let s="Vue Demo",n;return{c(){n=Z(s)},l(a){n=ss(a,s)},m(a,l){r(a,n,l)},p,d(a){a&&F(n)}}}function ms(t){let s;return{c(){s=j("div"),this.h()},l(n){s=M(n,"DIV",{slot:!0}),T(s).forEach(F),this.h()},h(){V(s,"slot","with")},m(n,a){r(n,s,a),t[5](s)},p,d(n){n&&F(s),t[5](null)}}}function _s(t){let s;return{c(){s=j("div"),this.h()},l(n){s=M(n,"DIV",{slot:!0}),T(s).forEach(F),this.h()},h(){V(s,"slot","without")},m(n,a){r(n,s,a),t[4](s)},p,d(n){n&&F(s),t[4](null)}}}function hs(t){let s,n;return s=new us({props:{slot:"code-with"}}),{c(){_(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,l){g(s,a,l),n=!0},p,i(a){n||(d(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){$(s,a)}}}function gs(t){let s,n;return s=new ys({props:{slot:"code-without"}}),{c(){_(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,l){g(s,a,l),n=!0},p,i(a){n||(d(s.$$.fragment,a),n=!0)},o(a){A(s.$$.fragment,a),n=!1},d(a){$(s,a)}}}function ds(t){let s,n,a,l;return s=new ns({props:{$$slots:{default:[fs]},$$scope:{ctx:t}}}),a=new ls({props:{$$slots:{"code-without":[gs],"code-with":[hs],without:[_s],with:[ms]},$$scope:{ctx:t}}}),a.$on("refreshWith",t[2]),a.$on("refreshWithout",t[3]),{c(){_(s.$$.fragment),n=R(),_(a.$$.fragment)},l(o){h(s.$$.fragment,o),n=X(o),h(a.$$.fragment,o)},m(o,e){g(s,o,e),r(o,n,e),g(a,o,e),l=!0},p(o,[e]){const i={};e&64&&(i.$$scope={dirty:e,ctx:o}),s.$set(i);const u={};e&67&&(u.$$scope={dirty:e,ctx:o}),a.$set(u)},i(o){l||(d(s.$$.fragment,o),d(a.$$.fragment,o),l=!0)},o(o){A(s.$$.fragment,o),A(a.$$.fragment,o),l=!1},d(o){$(s,o),o&&F(n),$(a,o)}}}const qs=!0;function As(t,s,n){let a,l;async function o(){await S(),H(cs).mount(a)}async function e(){await S(),H(es).mount(l)}Y(()=>{o(),e()});function i(y){G[y?"unshift":"push"](()=>{l=y,n(1,l)})}function u(y){G[y?"unshift":"push"](()=>{a=y,n(0,a)})}return[a,l,o,e,i,u]}class Bs extends E{constructor(s){super();q(this,s,As,ds,B,{})}}export{Bs as default,qs as prerender};
