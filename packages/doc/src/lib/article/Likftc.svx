<script lang="ts">
  import With from '$lib/demo/svelte/With.svelte'
  import Without from '$lib/demo/svelte/Without.svelte'

  let key = Math.random();

  function refresh () {
    key = Math.random();
  }
</script>

List item keys for FLIP transition component.

## What is FLIP?

[First, Last, Invert, Play](https://aerotwist.com/blog/flip-your-animations/)

## Why `likftc`

Frontend components use `key`s to know the related DOM. When a item is removed and append a new one with the same key before the transition of the older one end, it will reuse the same instance and the entering transition will conflict with the older exiting transition. `likftc` give a new key for the new item that make it use another instance to avoid the problem simply.

<table class="demo">
  <tr>
    <td>
      <svg width="1em" height="1em" viewBox="0 0 36 36"><path fill="#DD2E44" d="M21.533 18.002L33.768 5.768a2.5 2.5 0 0 0-3.535-3.535L17.998 14.467L5.764 2.233a2.498 2.498 0 0 0-3.535 0a2.498 2.498 0 0 0 0 3.535l12.234 12.234L2.201 30.265a2.498 2.498 0 0 0 1.768 4.267c.64 0 1.28-.244 1.768-.732l12.262-12.263l12.234 12.234a2.493 2.493 0 0 0 1.768.732a2.5 2.5 0 0 0 1.768-4.267L21.533 18.002z"></path></svg>
    </td>
    <td>
      {#key key}
        <Without />
      {/key}
    </td>
    <td rowspan={2}>
      <button on:click={refresh}>
        {'Replay'}
      </button>
    </td>
  </tr>
  <tr>
    <td>
      <svg width="1em" height="1em" viewBox="0 0 36 36"><path fill="#31b044" d="M34.459 1.375a2.999 2.999 0 0 0-4.149.884L13.5 28.17l-8.198-7.58a2.999 2.999 0 1 0-4.073 4.405l10.764 9.952s.309.266.452.359a2.999 2.999 0 0 0 4.15-.884L35.343 5.524a2.999 2.999 0 0 0-.884-4.149z"></path></svg>
    </td>
    <td>
      {#key key}
        <With />
      {/key}
    </td>
  </tr>
</table>

<style lang="scss">
  .demo {
    margin-left: auto;
    margin-right: auto;
    :global(ul) {
      display: flex;
      gap: 1em;
    }
    tr td:nth-child(2) {
      padding: 0 1.2em;
    }
    td {
      height: 1.5em;
    }
    button {
      background: white;
      color: black;
      padding: 0.2em 0.5em;
      transition: transform ease 300ms;

      &:hover {
        transform: scale(1.2);
      }
    }
  }
</style>
